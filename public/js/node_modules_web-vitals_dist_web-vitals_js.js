"use strict";
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_web-vitals_dist_web-vitals_js"], {
  /***/
  "./node_modules/web-vitals/dist/web-vitals.js": (
    /*!****************************************************!*\
      !*** ./node_modules/web-vitals/dist/web-vitals.js ***!
      \****************************************************/
    /***/
    (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
      __webpack_require__.r(__webpack_exports__);
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "CLSThresholds": () => (
          /* binding */
          L
        ),
        /* harmony export */
        "FCPThresholds": () => (
          /* binding */
          b
        ),
        /* harmony export */
        "FIDThresholds": () => (
          /* binding */
          $
        ),
        /* harmony export */
        "INPThresholds": () => (
          /* binding */
          N
        ),
        /* harmony export */
        "LCPThresholds": () => (
          /* binding */
          _
        ),
        /* harmony export */
        "TTFBThresholds": () => (
          /* binding */
          J
        ),
        /* harmony export */
        "onCLS": () => (
          /* binding */
          w
        ),
        /* harmony export */
        "onFCP": () => (
          /* binding */
          S
        ),
        /* harmony export */
        "onFID": () => (
          /* binding */
          ee
        ),
        /* harmony export */
        "onINP": () => (
          /* binding */
          j
        ),
        /* harmony export */
        "onLCP": () => (
          /* binding */
          G
        ),
        /* harmony export */
        "onTTFB": () => (
          /* binding */
          Q
        )
        /* harmony export */
      });
      var e, n, t, r, i, o = -1, a = function(e2) {
        addEventListener("pageshow", function(n2) {
          n2.persisted && (o = n2.timeStamp, e2(n2));
        }, true);
      }, c = function() {
        var e2 = self.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0];
        if (e2 && e2.responseStart > 0 && e2.responseStart < performance.now()) return e2;
      }, u = function() {
        var e2 = c();
        return e2 && e2.activationStart || 0;
      }, f = function(e2, n2) {
        var t2 = c(), r2 = "navigate";
        o >= 0 ? r2 = "back-forward-cache" : t2 && (document.prerendering || u() > 0 ? r2 = "prerender" : document.wasDiscarded ? r2 = "restore" : t2.type && (r2 = t2.type.replace(/_/g, "-")));
        return { name: e2, value: void 0 === n2 ? -1 : n2, rating: "good", delta: 0, entries: [], id: "v4-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12), navigationType: r2 };
      }, s = function(e2, n2, t2) {
        try {
          if (PerformanceObserver.supportedEntryTypes.includes(e2)) {
            var r2 = new PerformanceObserver(function(e3) {
              Promise.resolve().then(function() {
                n2(e3.getEntries());
              });
            });
            return r2.observe(Object.assign({ type: e2, buffered: true }, t2 || {})), r2;
          }
        } catch (e3) {
        }
      }, d = function(e2, n2, t2, r2) {
        var i2, o2;
        return function(a2) {
          n2.value >= 0 && (a2 || r2) && ((o2 = n2.value - (i2 || 0)) || void 0 === i2) && (i2 = n2.value, n2.delta = o2, n2.rating = function(e3, n3) {
            return e3 > n3[1] ? "poor" : e3 > n3[0] ? "needs-improvement" : "good";
          }(n2.value, t2), e2(n2));
        };
      }, l = function(e2) {
        requestAnimationFrame(function() {
          return requestAnimationFrame(function() {
            return e2();
          });
        });
      }, p = function(e2) {
        document.addEventListener("visibilitychange", function() {
          "hidden" === document.visibilityState && e2();
        });
      }, v = function(e2) {
        var n2 = false;
        return function() {
          n2 || (e2(), n2 = true);
        };
      }, m = -1, h = function() {
        return "hidden" !== document.visibilityState || document.prerendering ? 1 / 0 : 0;
      }, g = function(e2) {
        "hidden" === document.visibilityState && m > -1 && (m = "visibilitychange" === e2.type ? e2.timeStamp : 0, T());
      }, y = function() {
        addEventListener("visibilitychange", g, true), addEventListener("prerenderingchange", g, true);
      }, T = function() {
        removeEventListener("visibilitychange", g, true), removeEventListener("prerenderingchange", g, true);
      }, E = function() {
        return m < 0 && (m = h(), y(), a(function() {
          setTimeout(function() {
            m = h(), y();
          }, 0);
        })), { get firstHiddenTime() {
          return m;
        } };
      }, C = function(e2) {
        document.prerendering ? addEventListener("prerenderingchange", function() {
          return e2();
        }, true) : e2();
      }, b = [1800, 3e3], S = function(e2, n2) {
        n2 = n2 || {}, C(function() {
          var t2, r2 = E(), i2 = f("FCP"), o2 = s("paint", function(e3) {
            e3.forEach(function(e4) {
              "first-contentful-paint" === e4.name && (o2.disconnect(), e4.startTime < r2.firstHiddenTime && (i2.value = Math.max(e4.startTime - u(), 0), i2.entries.push(e4), t2(true)));
            });
          });
          o2 && (t2 = d(e2, i2, b, n2.reportAllChanges), a(function(r3) {
            i2 = f("FCP"), t2 = d(e2, i2, b, n2.reportAllChanges), l(function() {
              i2.value = performance.now() - r3.timeStamp, t2(true);
            });
          }));
        });
      }, L = [0.1, 0.25], w = function(e2, n2) {
        n2 = n2 || {}, S(v(function() {
          var t2, r2 = f("CLS", 0), i2 = 0, o2 = [], c2 = function(e3) {
            e3.forEach(function(e4) {
              if (!e4.hadRecentInput) {
                var n3 = o2[0], t3 = o2[o2.length - 1];
                i2 && e4.startTime - t3.startTime < 1e3 && e4.startTime - n3.startTime < 5e3 ? (i2 += e4.value, o2.push(e4)) : (i2 = e4.value, o2 = [e4]);
              }
            }), i2 > r2.value && (r2.value = i2, r2.entries = o2, t2());
          }, u2 = s("layout-shift", c2);
          u2 && (t2 = d(e2, r2, L, n2.reportAllChanges), p(function() {
            c2(u2.takeRecords()), t2(true);
          }), a(function() {
            i2 = 0, r2 = f("CLS", 0), t2 = d(e2, r2, L, n2.reportAllChanges), l(function() {
              return t2();
            });
          }), setTimeout(t2, 0));
        }));
      }, A = 0, I = 1 / 0, P = 0, M = function(e2) {
        e2.forEach(function(e3) {
          e3.interactionId && (I = Math.min(I, e3.interactionId), P = Math.max(P, e3.interactionId), A = P ? (P - I) / 7 + 1 : 0);
        });
      }, k = function() {
        return e ? A : performance.interactionCount || 0;
      }, F = function() {
        "interactionCount" in performance || e || (e = s("event", M, { type: "event", buffered: true, durationThreshold: 0 }));
      }, D = [], x = /* @__PURE__ */ new Map(), R = 0, B = function() {
        var e2 = Math.min(D.length - 1, Math.floor((k() - R) / 50));
        return D[e2];
      }, H = [], q = function(e2) {
        if (H.forEach(function(n3) {
          return n3(e2);
        }), e2.interactionId || "first-input" === e2.entryType) {
          var n2 = D[D.length - 1], t2 = x.get(e2.interactionId);
          if (t2 || D.length < 10 || e2.duration > n2.latency) {
            if (t2) e2.duration > t2.latency ? (t2.entries = [e2], t2.latency = e2.duration) : e2.duration === t2.latency && e2.startTime === t2.entries[0].startTime && t2.entries.push(e2);
            else {
              var r2 = { id: e2.interactionId, latency: e2.duration, entries: [e2] };
              x.set(r2.id, r2), D.push(r2);
            }
            D.sort(function(e3, n3) {
              return n3.latency - e3.latency;
            }), D.length > 10 && D.splice(10).forEach(function(e3) {
              return x.delete(e3.id);
            });
          }
        }
      }, O = function(e2) {
        var n2 = self.requestIdleCallback || self.setTimeout, t2 = -1;
        return e2 = v(e2), "hidden" === document.visibilityState ? e2() : (t2 = n2(e2), p(e2)), t2;
      }, N = [200, 500], j = function(e2, n2) {
        "PerformanceEventTiming" in self && "interactionId" in PerformanceEventTiming.prototype && (n2 = n2 || {}, C(function() {
          var t2;
          F();
          var r2, i2 = f("INP"), o2 = function(e3) {
            O(function() {
              e3.forEach(q);
              var n3 = B();
              n3 && n3.latency !== i2.value && (i2.value = n3.latency, i2.entries = n3.entries, r2());
            });
          }, c2 = s("event", o2, { durationThreshold: null !== (t2 = n2.durationThreshold) && void 0 !== t2 ? t2 : 40 });
          r2 = d(e2, i2, N, n2.reportAllChanges), c2 && (c2.observe({ type: "first-input", buffered: true }), p(function() {
            o2(c2.takeRecords()), r2(true);
          }), a(function() {
            R = k(), D.length = 0, x.clear(), i2 = f("INP"), r2 = d(e2, i2, N, n2.reportAllChanges);
          }));
        }));
      }, _ = [2500, 4e3], z = {}, G = function(e2, n2) {
        n2 = n2 || {}, C(function() {
          var t2, r2 = E(), i2 = f("LCP"), o2 = function(e3) {
            n2.reportAllChanges || (e3 = e3.slice(-1)), e3.forEach(function(e4) {
              e4.startTime < r2.firstHiddenTime && (i2.value = Math.max(e4.startTime - u(), 0), i2.entries = [e4], t2());
            });
          }, c2 = s("largest-contentful-paint", o2);
          if (c2) {
            t2 = d(e2, i2, _, n2.reportAllChanges);
            var m2 = v(function() {
              z[i2.id] || (o2(c2.takeRecords()), c2.disconnect(), z[i2.id] = true, t2(true));
            });
            ["keydown", "click"].forEach(function(e3) {
              addEventListener(e3, function() {
                return O(m2);
              }, true);
            }), p(m2), a(function(r3) {
              i2 = f("LCP"), t2 = d(e2, i2, _, n2.reportAllChanges), l(function() {
                i2.value = performance.now() - r3.timeStamp, z[i2.id] = true, t2(true);
              });
            });
          }
        });
      }, J = [800, 1800], K = function e2(n2) {
        document.prerendering ? C(function() {
          return e2(n2);
        }) : "complete" !== document.readyState ? addEventListener("load", function() {
          return e2(n2);
        }, true) : setTimeout(n2, 0);
      }, Q = function(e2, n2) {
        n2 = n2 || {};
        var t2 = f("TTFB"), r2 = d(e2, t2, J, n2.reportAllChanges);
        K(function() {
          var i2 = c();
          i2 && (t2.value = Math.max(i2.responseStart - u(), 0), t2.entries = [i2], r2(true), a(function() {
            t2 = f("TTFB", 0), (r2 = d(e2, t2, J, n2.reportAllChanges))(true);
          }));
        });
      }, U = { passive: true, capture: true }, V = /* @__PURE__ */ new Date(), W = function(e2, i2) {
        n || (n = i2, t = e2, r = /* @__PURE__ */ new Date(), Z(removeEventListener), X());
      }, X = function() {
        if (t >= 0 && t < r - V) {
          var e2 = { entryType: "first-input", name: n.type, target: n.target, cancelable: n.cancelable, startTime: n.timeStamp, processingStart: n.timeStamp + t };
          i.forEach(function(n2) {
            n2(e2);
          }), i = [];
        }
      }, Y = function(e2) {
        if (e2.cancelable) {
          var n2 = (e2.timeStamp > 1e12 ? /* @__PURE__ */ new Date() : performance.now()) - e2.timeStamp;
          "pointerdown" == e2.type ? function(e3, n3) {
            var t2 = function() {
              W(e3, n3), i2();
            }, r2 = function() {
              i2();
            }, i2 = function() {
              removeEventListener("pointerup", t2, U), removeEventListener("pointercancel", r2, U);
            };
            addEventListener("pointerup", t2, U), addEventListener("pointercancel", r2, U);
          }(n2, e2) : W(n2, e2);
        }
      }, Z = function(e2) {
        ["mousedown", "keydown", "touchstart", "pointerdown"].forEach(function(n2) {
          return e2(n2, Y, U);
        });
      }, $ = [100, 300], ee = function(e2, r2) {
        r2 = r2 || {}, C(function() {
          var o2, c2 = E(), u2 = f("FID"), l2 = function(e3) {
            e3.startTime < c2.firstHiddenTime && (u2.value = e3.processingStart - e3.startTime, u2.entries.push(e3), o2(true));
          }, m2 = function(e3) {
            e3.forEach(l2);
          }, h2 = s("first-input", m2);
          o2 = d(e2, u2, $, r2.reportAllChanges), h2 && (p(v(function() {
            m2(h2.takeRecords()), h2.disconnect();
          })), a(function() {
            var a2;
            u2 = f("FID"), o2 = d(e2, u2, $, r2.reportAllChanges), i = [], t = -1, n = null, Z(addEventListener), a2 = l2, i.push(a2), X();
          }));
        });
      };
    }
  )
}]);
